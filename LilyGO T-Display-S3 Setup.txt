
You need to download the Zip file from LilyGO's own GitHub:

https://github.com/Xinyuan-LilyGO/T-Display-S3

by pressing the green button "Code" and after downloading, expand the Zip,

Copy the unzipped files you find in the 'lib' folder (from the newly unzipped folder) into your Arduino 'libraries' folder.

Do Not do an "Arduino Libraries Update" to the "TFT_eSPI" library that you just unzipped and 
Do Not use the standard "TFT_eSPI" Arduino library! 
The "Standard" TFT_eSPI library does not work with LilyGO T-Display S3 ! 
Resist the urge to update this file.

Now:
Step 1, below, requires that you have already installed the ESP32 board definitions and
are using the latest version. It is also assumed that you have installed Arduino IDE, ver 1 or 2.
(This is covered in many tutorials online, so I will be brief)
If your Arduino IDE does not already have "ESP32 Arduino" as shown paste this:
https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
into Arduino Preferences, Additional Boards Manager and wait for it to load...
From Arduino Tools, Board: select ESP32 Arduino, ESP32S3 Dev Module. Right at the top!
Please see attached screenshot, "Select Board.png"
Make sure that you change:
Flash Size to 8M
Partition Scheme to 8M with spiffs.

To enable serial monitor function for debugging, etc, be sure to also set 
USB CDC On Boot "Enabled".
All settings shown, run on my computer just as shown.

(if you are NOT running one of my sketches, you should add:
#define LCDpin 15, just before the setup and then in setup add:
pinMode(LCDpin, OUTPUT); 		//"triggers the LCD backlight,
digitalWrite(LCDpin, HIGH);)	//on startup"

My repository contains two examples of simple documented easy to understand program code. 
The first one to try is "LilyGO_hothead.ino" which demos most of the common things you need to program this board:

Step 1) Include an image (My hothead.h logo needs to be in the same folder as each sketch).

Step 2) Demonstrate the very high speed graphics made possible by an old school 8 bit 
parallel interface to the LCD instead of SPI or I2C. (A 50 year old concept, lost and forgotten.)

Step 3) The left button (marked "BOT" beside the USB connector) changes the highlighting of the rectangle text showing
"left pin 0" to now show "LEFT" (and right button marked "KEY”… highlights the right).

Open the code and read and understand it and you're good to go. 
Try pushing both buttons at once!

The rest of the code is simple and helps you make your own programs.
The second program is: "LilyGO_tempsensor_hothead.ino" which just substitutes
a I2C temperature sensor in place of the progress bar.
The sensor is an M5Stack ENV type, but both Adafruit and DFRobot make a 
similar board, but possibly a different I2C address. This is 0x44, but some
are 0x45.
Instead of a library to try and find, I put the sensor code right in line
with the sketch. This also helps you understand how I2C works!!!
You can email me at teastain@me.com
I'm open to suggestions!

Solutions to common startup issues:
A) Unit seems "bricked" 1
   LCD does not display, unit remains dark with no white backlight:
	Add #define LCDpin 15	// just before the setup and then in setup add:
	pinMode(LCDpin, OUTPUT); 	//"triggers the LCD backlight,
	digitalWrite(LCDpin, HIGH);)	//on startup"

B) Cannot see Serial.Print on Arduino Serial Monitor
	To enable serial monitor function for debugging, you must also set 
	USB CDC On Boot "Enabled"
	in the Arduino board parameters

C) Can run on USB power but not battery connector:
	Add #define LCDpin 15	// just before the setup and then in setup add:
	pinMode(LCDpin, OUTPUT); 	//"triggers the LCD backlight,
	digitalWrite(LCDpin, HIGH);)	//on startup"
	
	(LilyGO variously refers to them as "LCD power on" OR "PIN_POWER_ON")
	Thanks to user RobLatour for finding this cure for the battery issue!

-Terry
